@model IEnumerable<Finanças.Models.v_clients>

@{
    ViewBag.Title = "List_Of_Clients";
}

<h2>LIST OF CLIENTS</h2>

<h3 class="text-danger">@ViewBag.msg</h3>


<p>
    <a href="@Url.Action("Add_client", "Clients")" class="btn btn-primary">
        NEW CLIENT
    </a>
</p>
<div class="clients-grid row">
    @foreach (var item in Model)
    {
        <div class="client-item col-md-6 col-lg-4 mb-4 ">
            <div class="card gradient-bg">
                <div class="card-body">
                    <table class="table table-borderless">
                        <tr>
                            <th>ID CLIENT:</th>
                            <td class="text-center">@Html.DisplayFor(modelItem => item.idcli)</td>
                        </tr>
                        <tr>
                            <th>FIRST NAME:</th>
                            <td class="text-center">@Html.DisplayFor(modelItem => item.firstName)</td>
                        </tr>
                        <tr>
                            <th>LAST NAME:</th>
                            <td class="text-center">@Html.DisplayFor(modelItem => item.lastName)</td>
                        </tr>
                        <tr>
                            <th>ROLE:</th>
                            <td class="text-center">@Html.DisplayFor(modelItem => item.role)</td>
                        </tr>
                        <tr>
                            <th>BIRTH DAY:</th>
                            <td class="text-center">@Html.DisplayFor(modelItem => item.datanasc)</td>
                        </tr>
                        <tr>
                            <th>AGE:</th>
                            <td class="text-center">@Html.DisplayFor(modelItem => item.age)</td>
                        </tr>
                        <tr>
                            <th>PHOTO:</th>
                            <td class="client-photo text-center">
                                @if (item.fotopath == null)
                                {
                                    <img src="@Url.Content("~/Photos/No_image.png")" class="img-fluid" />
                                }
                                else
                                {
                                    <img src="@Url.Content("~/photos/" + item.fotopath)" class="img-fluid" />
                                }
                            </td>
                        </tr>
                        <tr>
                            <td colspan="2" class="text-center">
                                <div class="d-flex justify-content-center gap-2">
                                    @Html.ActionLink("EDIT", "Edit_client", new { id = item.idcli }, new { @class = "btn btn-info btn-sm border border-black border-3" })
                                    @Html.ActionLink("DETAIL", "Detail_client", new { id = item.idcli }, new { @class = "btn btn-success btn-sm border border-black border-3" })
                                    @Html.ActionLink("DELETE", null, null, new { id = item.idcli, name = "del", @class = "btn btn-danger btn-sm fa fa-trash border border-black border-3" })
                                </div>
                            </td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    }


</div>

@section deleteClient
{
    <script>
        $(() => {
            // Single client delete handler
            $("[name='del']").click((evt) => {
                evt.preventDefault();
                let ID = evt.target.id;
                let r = confirm("Do you really want to permanently delete this client?");
                if (!r) return false;
                $.ajax({
                    url: '@Url.Action("Delete_client", "Clients")',
                    type: "post",
                    dataType: "json",
                    data: { Id: ID },
                    success: function (data) {
                        console.log(data.msg);
                        if (data.msg == "ok") {
                            $(evt.target).closest(".client-item").remove();
                        }
                        $("#tv").html(data.msg);
                    },
                    error: function (error) {
                        console.log(error);
                    }
                });
            });
        });
    </script>
}



<style>
    .client-photo img {
        width: 10em;
        height: 10em;
    }

    /*    .actions {
        display: flex;
        justify-content: center;
        gap: 10px;
    }*/
    .gap-2 {
        gap: 10px;
    }

    .gradient-bg {
        background: linear-gradient(to right, #00c6ff, #0072ff); /* Adjust colors and direction as needed */
        color: white; /* Optional: text color */
        padding: 20px; /* Optional: padding inside the div */
    }
</style>

