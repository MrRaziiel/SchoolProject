@model Finanças.Models.client

@{
    ViewBag.Title = "Add_client";
}

<h2>NEW CLIENT</h2>

@using (Html.BeginForm("Add_client", "Clients", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group mb-2">
            <b>FIRST NAME</b>
            <div class="col-md-10 mt-2">
                @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-2">
            <b>LAST NAME</b>
            <div class="col-md-10 mt-2">
                @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group mb-2">
            <b>PASSWORD</b>
                <div class="col-md-10 mt-2">
                    @Html.PasswordFor(model => model.password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
</div>

        <div class="form-group mb-2">
            <b>ROLE</b>
                <div class="col-md-10 mt-2">
                    @Html.DropDownListFor(model => model.role, ViewBag.roles as SelectList, new { @class = "form-select" })
                    @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger" })
                </div>
</div>

        <div class="form-group mb-2">
            <b>BIRTH DAY</b>
                <div class="col-md-10 mt-2">
                    @Html.TextBoxFor(model => model.datanasc, new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(model => model.datanasc, "", new { @class = "text-danger" })
                </div>
</div>

        <div class="form-group">
            <b>PHOTO</b>
                <div class="col-md-10 mt-2">
                    <input type="file" id="fich" name="fich" class="form-control" onchange="previewImage(event)" />
                    @Html.ValidationMessageFor(model => model.fotopath, "", new { @class = "text-danger client-photo" })
                    <!-- Image preview -->
                    <img id="imagePreview" src="#" alt="Image Preview" style="display: none; max-width: 40em; height: auto; margin-top: 10px;" />
                </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="CREATE" class="btn btn-success mt-2" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "List_of_clients", "Clients")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


}

@section PreviewImage
{
    <script>
        function previewImage(event) {
            var reader = new FileReader();
            reader.onload = function () {
                var output = document.getElementById('imagePreview');
                output.src = reader.result;
                output.style.display = 'block';
            };
            reader.readAsDataURL(event.target.files[0]);
        }
    </script>
}
<style>
    .client-photo img {
        width: 80em;
        height: 80em;
    }

    /*    .actions {
        display: flex;
        justify-content: center;
        gap: 10px;
    }*/
    .gap-2 {
        gap: 10px;
    }

    .gradient-bg {
        background: linear-gradient(to right, #00c6ff, #0072ff); /* Adjust colors and direction as needed */
        color: white; /* Optional: text color */
        padding: 20px; /* Optional: padding inside the div */
    }
</style>

